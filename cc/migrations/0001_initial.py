# Generated by Django 3.1.4 on 2021-04-08 07:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Area_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('city_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='businessReg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Travel', 'Travel'), ('Food', 'Food'), ('Tutions', 'Tutions'), ('Sports', 'Sports')], default='', max_length=100)),
                ('businessname', models.CharField(max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.area')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('owner', 'businessname', 'address', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Community_Name', models.CharField(max_length=200)),
                ('Area_Name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cc.area')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('people', models.ManyToManyField(blank=True, null=True, related_name='community_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete', models.BooleanField(blank=True, default=False, null=True)),
                ('trasaction_id', models.CharField(max_length=200, null=True)),
                ('date_ordered', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pincode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(blank=True, max_length=6, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=500, null=True)),
                ('price_per_unit', models.IntegerField(default=10)),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.businessreg')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobileNumber', models.CharField(max_length=10)),
                ('houseNumber', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('joined_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics')),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('Area_Name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cc.area')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TravelsUserBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('Hyderabad', 'Hyderabad'), ('Bangalore', 'Bangalore'), ('Delhi', 'Delhi'), ('Mumbai', 'Mumbai')], default='', max_length=100)),
                ('destination', models.CharField(choices=[('Hyderabad', 'Hyderabad'), ('Bangalore', 'Bangalore'), ('Delhi', 'Delhi'), ('Mumbai', 'Mumbai')], default='', max_length=100)),
                ('date_of_journey', models.DateField(blank=True, null=True)),
                ('time_of_journey', models.TimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hno', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=500)),
                ('payment', models.CharField(max_length=100)),
                ('price', models.IntegerField(default=0)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.restaurantitems')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.restaurantitems')),
            ],
        ),
        migrations.CreateModel(
            name='KiranaStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(blank=True, max_length=200, null=True)),
                ('ContactNumber', models.CharField(blank=True, max_length=10, null=True)),
                ('Area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cc.area')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('attachment_pic', models.ImageField(blank=True, null=True, upload_to='community_posts_pics')),
                ('text_body', models.TextField(blank=True, max_length=3000, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.community')),
            ],
        ),
        migrations.AddField(
            model_name='community',
            name='pincode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cc.pincode'),
        ),
        migrations.CreateModel(
            name='businessVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('govid', models.FileField(blank=True, null=True, upload_to='governmentid/%Y/%m/%D/')),
                ('pancard', models.ImageField(blank=True, null=True, upload_to='pandetails/%Y/%m/%D/')),
                ('photos', models.ImageField(blank=True, null=True, upload_to='images')),
                ('businessname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cc.businessreg')),
            ],
        ),
        migrations.AddField(
            model_name='area',
            name='pincode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cc.pincode'),
        ),
        migrations.CreateModel(
            name='CommunityRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('Community_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cc.community')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'Community_Name')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='community',
            unique_together={('admin', 'Area_Name')},
        ),
    ]
